epoch: 13, test accu: 0.9585674157303371
ltl: finally ( prop_1 until prop_2 )
gold: when possible ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or globally prop_2 )
gold: when possible ( prop_1 ) or always ( prop_2 )
pred ltl: finally ( prop_1 or globally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Globally , whenever the event that ( prop_1 ) takes place , then the following condition is true : in no time the event that ( prop_2 ) shall occur or ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , whenever ( prop_1 ) and the scenario that ( prop_2 ) occurs then ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( prop_1 until finally prop_2 )
gold: forever ( prop_1 ) until when possible ( prop_2 )
pred ltl: globally ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally prop_3 )
gold: On condition that ( prop_1 ) and ( prop_2 ) then all of the following conditions hold : there needs to be ultimately a certain time point in the future before the end of the execution , at which ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: finally ( prop_1 or negation prop_2 )
gold: at some time ( prop_1 ) or don't ( prop_2 )
pred ltl: finally ( prop_1 or negation prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: negation ( prop_1 or globally ( finally prop_2 ) )
gold: do not ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: negation ( prop_1 or globally ( finally prop_2 ) )

ltl: ( finally ( prop_1 ) imply globally prop_2 )
gold: whenever ( prop_1 ) can infer that forever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply globally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or negation ( finally prop_2 ) )
gold: whenever ( prop_1 ) or don't ( prop_2 )
pred ltl: finally ( prop_1 or negation prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: In case that ( prop_1 ) then in response ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( globally ( negation ( prop_1 ) ) imply globally ( negation prop_2 ) )
gold: never ( prop_1 ) means that never ( prop_2 )
pred ltl: ( globally ( negation ( prop_1 ) ) imply globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( ( ( prop_4 until prop_2 ) and prop_1 ) imply prop_3 )
gold: If ( prop_4 ) happens until the scenario that ( prop_2 ) is detected , and ( prop_1 ) is observed , then it should be followed by ( prop_3 ) .
pred ltl: ( ( ( prop_4 until prop_2 ) and prop_1 ) imply prop_3 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( ( negation prop_1 equal prop_3 ) and prop_2 )
gold: If it is not the case that ( prop_1 ) then it should be equivalent to the case that ( prop_3 ) , and in addition ( prop_2 ) should also be true.
pred ltl: ( ( negation prop_1 equal prop_3 ) and prop_2 )

ltl: globally ( prop_1 or prop_2 )
gold: always ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: In the case the scenario that ( prop_1 ) is detected then in response uninterruptedly ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if whenever ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , during the interval that ( prop_1 ) then all of the following conditions are true : ( prop_2 ) , and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( globally ( prop_3 or prop_2 ) and prop_1 )
gold: It is always the case that either ( prop_3 ) or the event that ( prop_2 ) gets detected, and ( prop_1 ) .
pred ltl: ( globally ( prop_3 or prop_2 ) and prop_1 )

ltl: globally ( negation ( prop_1 ) until finally prop_2 )
gold: never ( prop_1 ) until whenever ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: whenever ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: On condition that the event that ( prop_1 ) is observed then right away ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at any time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: negation ( prop_1 until prop_2 )
gold: do not ( prop_1 ) until ( prop_2 )
pred ltl: negation ( prop_1 until prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: whenever ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [0,20] ( finally [0,8] prop_3 ) )
gold: On condition that ( prop_1 ) and ( prop_2 ) , then in response for every time point during the coming 20 time units there will have to exist a certain time instant during the coming 0 to 8 time units , at which the transition action that ( prop_3 ) will have to be detected ultimately .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [20,8] ( finally [0,8] prop_3 ) )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( globally [92,225] ( prop_3 imply prop_2 ) and prop_1 )
gold: For each time instant in the next 92 to 225 time units if ( prop_3 ) then ( prop_2 ) , and ( prop_1 ) .
pred ltl: ( globally [92,225] ( prop_3 imply prop_2 ) and prop_1 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: If the event that ( prop_1 ) happens or ( prop_2 ) then ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply ( prop_3 until [9,31] prop_2 ) )
gold: In the case ( prop_1 ) , then all of the following conditions are true : at a time during the coming 9 to 31 time units ( prop_2 ) , and till then ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_3 until [9,31] prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if at some time ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: While ( prop_1 ) , and ( prop_2 ) then all of the following conditions are true : finally there will have to be a certain time point in the future before the simulation ends , at which ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: at some time ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: negation ( prop_1 or prop_2 )
gold: do not ( prop_1 ) or ( prop_2 )
pred ltl: negation ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Whenever ( prop_1 ) , or ( prop_2 ) then the following condition holds : at the same time ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when whenever ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until globally ( negation prop_2 ) )
gold: at any time ( prop_1 ) until never ( prop_2 )
pred ltl: finally ( prop_1 until globally ( negation prop_2 ) )

ltl: ( prop_1 imply finally prop_2 )
gold: if ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )
gold: It is always the case that in case that ( prop_1 ) or ( prop_2 ) , then the following condition is true : ( prop_3 ) then this condition will be holding consistently in the future till the end of the simulation .
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that if ( prop_1 ) , then the following condition is true : in no time ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 imply prop_2 ) or prop_3 )
gold: At some point ( prop_1 ) should happen and then ( prop_2 ) , or else ( prop_3 ) .
pred ltl: ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( negation prop_1 and prop_2 )
gold: never ( prop_1 ) and ( prop_2 )
pred ltl: globally ( negation prop_1 and prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) means that at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally [46,56] ( globally [2,8] prop_3 ) )
gold: During the interval that ( prop_1 ) , and the scenario that ( prop_2 ) does not get observed then all of the following conditions are true : there ought to be finally a certain time instant during the subsequent 46 to 56 time units , at which for the subsequent 2 to 8 time units , ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally [46,56] ( globally [2,8] prop_3 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )
gold: Globally , if the transition action that ( prop_1 ) takes place or ( prop_2 ) , then in response right away ( prop_3 ) and promptly ( prop_4 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or negation ( finally prop_2 ) )
gold: when possible ( prop_1 ) or don't ( prop_2 )
pred ltl: finally ( prop_1 or negation prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Every time the event ( prop_1 ) happens, the scenario ( prop_2 ) should not take place and instead the transition action ( prop_3 ) will be observed. This is because the scenario ( prop_2 ) would not be able to take place if the event ( prop_1 ) happens, and the transition action ( prop_3 ) is a more likely occurrence.
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or prop_2 )
gold: always ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( globally ( negation prop_1 ) or prop_2 ) and prop_3 )
gold: It is always the case that ( prop_1 ) should not happen or else ( prop_2 ) should happen, and in the meantime with the above condition ( prop_3 ) should happen .
pred ltl: ( globally ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and at some time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Whenever the scenario that ( prop_1 ) takes place then the following condition holds : in no time ( prop_2 ) , and promptly ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: When the event that ( prop_1 ) is detected , then right away ( prop_2 ) , and at the same time point ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )
gold: If ( prop_1 ) and ( prop_2 ) are true, then either the scenario ( prop_3 ) will take place or ( prop_4 ).
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: globally ( negation ( prop_1 ) until finally prop_2 )
gold: never ( prop_1 ) until at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 until prop_3 ) )
gold: If ( prop_1 ) is always the case, then ( prop_2 ) should hold and continue consecutively until ( prop_3 ).
pred ltl: globally ( prop_1 imply ( prop_2 until prop_3 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 until prop_2 )
gold: ( prop_1 ) until ( prop_2 )
pred ltl: ( prop_1 until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: at some time ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) means that at any time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: ( ( prop_1 until prop_2 ) equal prop_3 )
gold: The scenario that ( prop_1 ) holds until the scenario ( prop_2 ) happens is equivalent to the scenario that ( prop_3 ) .
pred ltl: ( ( ( prop_1 until prop_2 ) equal prop_3 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 until globally prop_2 )
gold: ( prop_1 ) until always ( prop_2 )
pred ltl: ( prop_1 until globally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: As soon as ( prop_1 ) , then all of the following conditions are true : at the same moment ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: at any time ( prop_1 ) and forever ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: globally ( prop_1 imply ( prop_3 until [1,11] prop_2 ) )
gold: Everytime when ( prop_1 ) then the following condition holds : there is eventually a certain moment in the following 1 to 11 time units , at which ( prop_2 ) , and before this ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_3 until [1,11] prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 until globally ( finally prop_2 ) )
gold: at any time ( prop_1 ) until repeatedly ( prop_2 )
pred ltl: finally ( prop_1 until globally ( finally prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: when ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: at some time ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or negation prop_2 )
gold: when possible ( prop_1 ) or do not ( prop_2 )
pred ltl: finally ( prop_1 or negation prop_2 )

ltl: ( prop_1 or negation prop_2 )
gold: ( prop_1 ) or don't ( prop_2 )
pred ltl: ( prop_1 or negation prop_2 )

ltl: ( ( ( prop_3 equal prop_4 ) and prop_2 ) imply prop_1 )
gold: If ( prop_3 ) is equivalent to ( prop_4 ) and ( prop_2 ) is true, then ( prop_1 ) is also true .
pred ltl: ( ( ( prop_3 equal prop_4 ) and prop_2 ) imply prop_1 )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )
gold: Everytime when ( prop_1 ) , or the scenario that ( prop_2 ) does n't take place then the following condition is true : in no time ( prop_3 ) and promptly the event that ( prop_4 ) shall happen .
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )

ltl: ( ( ( prop_3 imply prop_1 ) or prop_2 ) until prop_4 )
gold: If at some point ( prop_3 ) then ( prop_1 ) happens or else ( prop_2 ) , this scenario will hold until ( prop_4 ) .
pred ltl: ( ( ( prop_3 imply prop_1 ) or prop_2 ) until prop_4 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( ( ( prop_1 imply prop_3 ) until [1,163] prop_2 ) or prop_4 )
gold: If ( prop_1 ) then ( prop_3 ) at some point and this scenario will hold until at some other point during the 1 to 163 time units ( prop_2 ) is detected , or else ( prop_4 ) .
pred ltl: ( ( ( prop_1 imply prop_3 ) until [1,163] prop_2 ) or prop_4 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: at any time ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: ( ( globally [26,159] ( negation prop_2 ) and prop_1 ) and prop_3 )
gold: It is always the case that during the next 26 to 159 time units ( prop_2 ) does not occur, and ( prop_1 ), and ( prop_3 ) .
pred ltl: ( ( globally [26,159] prop_2 and prop_1 ) and prop_3 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: In the event that ( prop_1 ) happens, then ( prop_2 ) or ( prop_3 ) will also happen.
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Every time the scenario ( prop_1 ) is detected, the response ( prop_2 ) or ( prop_3 ) should happen.
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_2 equal prop_3 ) or prop_1 )
gold: There should be a moment in the future when either ( prop_2 ) and ( prop_3 ) are both detected or ( prop_2 ) and ( prop_3 ) are both not detected , or else ( prop_1 ) is detected .
pred ltl: ( ( ( prop_2 and prop_3 ) or prop_3 ) or prop_1 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: at some time ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: globally ( finally ( prop_1 ) and finally prop_2 )
gold: repeatedly ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply finally [59,100] prop_3 )
gold: When either ( prop_1 ) or ( prop_2 ) happens, the scenario ( prop_3 ) should take place in response within the next 59 to 100 time units.
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally [59,100] prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: In the case of ( prop_1 ) or ( prop_2 ), the following condition holds: ( prop_3 ).
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when whenever ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: During the interval that ( prop_1 ) and ( prop_2 ) then all of the following conditions are true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally prop_3 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , whenever the transition action that ( prop_1 ) happens , and ( prop_2 ) , then all of the following conditions are true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that at any time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( prop_1 or globally prop_2 )
gold: ( prop_1 ) or always ( prop_2 )
pred ltl: ( prop_1 or globally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [58,67] prop_3 )
gold: In case that ( prop_1 ) , and ( prop_2 ) , then the following condition holds : for every time instant in the following 58 to 67 time units , ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [58,67] prop_3 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In case that ( prop_1 ) , and ( prop_2 ) then the following condition holds : ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: at any time ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , everytime when ( prop_1 ) and ( prop_2 ) then the following condition holds : at the same time ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and when possible ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and globally ( negation prop_2 ) )
gold: ( prop_1 ) and never ( prop_2 )
pred ltl: ( prop_1 and globally ( negation prop_2 ) )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: at any time ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Globally , everytime when ( prop_1 ) , or ( prop_2 ) then all of the following conditions are true : at the same time point ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: whenever ( prop_1 ) and forever ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: when possible ( prop_1 ) and forever ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until when possible ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( globally prop_1 imply prop_2 )
gold: if forever ( prop_1 ) , ( prop_2 )
pred ltl: ( globally prop_1 imply prop_2 )

ltl: ( ( negation prop_2 or prop_1 ) until prop_3 )
gold: If at some point ( prop_2 ) is not detected or ( prop_1 ) happens , then this scenario will hold until at some other point ( prop_3 ) is detected .
pred ltl: ( ( negation prop_2 or prop_1 ) until prop_3 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that if the transition action that ( prop_1 ) gets observed , then in response promptly ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: In case that ( prop_1 ) , and ( prop_2 ) , then the following condition holds : finally there is a certain moment in the future before the end of the execution , after which ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally prop_3 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: whenever ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: ( ( ( prop_2 imply prop_4 ) equal prop_3 ) and prop_1 )
gold: Scenario that ( prop_2 ) leads to ( prop_4 ) is equivalent to ( prop_3 ) , and ( prop_1 ) .
pred ltl: ( ( ( prop_2 imply prop_4 ) equal prop_3 ) and prop_1 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( globally [450,560] ( prop_3 equal prop_1 ) imply prop_2 )
gold: For each time instant in the next 450 to 560 time units ( prop_3 ) is equivalent to ( prop_1 ) , and then ( prop_2 ) .
pred ltl: ( globally [450,560] ( prop_3 equal prop_1 ) and prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that if the transition action that ( prop_1 ) gets observed then in response ( prop_2 ) and the transition action that ( prop_3 ) should happen simultaneously .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: On condition that ( prop_1 ) , and ( prop_2 ) , then the following condition is true : promptly ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( ( ( prop_3 or prop_4 ) or prop_2 ) until prop_1 )
gold: At least one of the events ( prop_3 ) , ( prop_4 ) , or ( prop_2 ) should occur until ( prop_1 ) .
pred ltl: ( ( ( prop_3 or prop_4 ) or prop_2 ) until prop_1 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: at some time ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or globally prop_2 )
gold: ( prop_1 ) or always ( prop_2 )
pred ltl: ( prop_1 or globally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: It is always the case that when ( prop_1 ) and ( prop_2 ) , then the following condition is true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 and globally prop_2 )
gold: always ( prop_1 ) and forever ( prop_2 )
pred ltl: globally ( prop_1 and globally prop_2 )

ltl: ( prop_1 and globally prop_2 )
gold: ( prop_1 ) and always ( prop_2 )
pred ltl: ( prop_1 and globally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and negation prop_2 )
gold: at any time ( prop_1 ) and do not ( prop_2 )
pred ltl: finally ( prop_1 and negation prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: at any time ( prop_1 ) and forever ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally [18,72] ( globally [1,4] prop_3 ) )
gold: It is always the case that if the scenario that ( prop_1 ) does not happen , and the scenario that ( prop_2 ) gets detected , then the following condition is true : there has to be a time in the subsequent 18 to 72 time units finally , at which ( prop_3 ) and then this condition needs to sustain consistently for the next 1 to 4 time units .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally [18,72] ( globally [1,4] prop_3 ) )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [28,48] ( finally prop_3 ) )
gold: Everytime when ( prop_1 ) and ( prop_2 ) , then in response for each time point during the following 28 to 48 time units finally there shall exist a time in the future before the execution ends , at which ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [28,48] ( finally prop_3 ) )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_2 or finally prop_3 )
gold: at some time ( prop_1 ) ( prop_2 ) or at any time ( prop_3 )
pred ltl: finally ( prop_2 or finally prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Globally , if ( prop_1 ) or ( prop_2 ) , then ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , in case that the event that ( prop_1 ) is detected , then the following condition is true : promptly the transition action that ( prop_2 ) shall happen and without any delay the transition action that ( prop_3 ) will never take place .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: if ( prop_1 ) , ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: ( ( ( prop_3 equal prop_1 ) until prop_4 ) imply prop_2 )
gold: If at some point ( prop_3 ) is equivalent to ( prop_1 ) and this scenario continues until ( prop_4 ) is detected , then ( prop_2 ) .
pred ltl: ( ( ( prop_3 equal prop_1 ) until prop_4 ) imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_2 and prop_1 )
gold: The scenario in which ( prop_2 ) and ( prop_1 ) are detected .
pred ltl: ( prop_2 and prop_1 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )
gold: It is always the case that whenever the event that ( prop_1 ) occurs or ( prop_2 ) , then the following condition holds : ( prop_3 ) , and at the same time ( prop_4 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_3 ) )
gold: If the transition action that ( prop_1 ) happens and ( prop_2 ) then ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )
gold: Globally , if ( prop_1 ) and ( prop_2 ) , then all of the following conditions are true : starting without any delay the event that ( prop_3 ) gets detected or at the same time ( prop_4 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Whenever ( prop_1 ) , or ( prop_2 ) , then in response without any delay ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that whenever the transition action that ( prop_1 ) happens or ( prop_2 ) then in response ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( ( prop_1 or prop_2 ) imply finally ( globally prop_3 ) )
gold: On condition that ( prop_1 ) , or ( prop_2 ) then the following condition is true : there must eventually exist sometime in the future before the end of the execution , at which ( prop_3 ) and this scenario always holds in the future before the end of the execution .
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally ( globally prop_3 ) )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: When ( prop_1 ) , and ( prop_2 ) , then all of the following conditions hold : ultimately there will exist sometime in the future before the simulation ends , after which for each time instant in the subsequent 93 time units ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( ( ( prop_4 or prop_1 ) and prop_3 ) until prop_2 )
gold: The scenario in which  either ( prop_4 ) or ( prop_1 ) keeps being detected , and ( prop_3 ) keeps being observed , until  ( prop_2 ) .
pred ltl: ( ( ( prop_4 or prop_1 ) and prop_1 ) until prop_3 ) ( prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: As soon as ( prop_1 ) then all of the following conditions are true : without any delay ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: When the transition action that ( prop_1 ) does not get observed , and ( prop_2 ) , then the following condition is true : promptly ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 imply finally prop_2 )
gold: when ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( finally [47,200] ( prop_3 or prop_1 ) equal prop_2 )
gold: For one certain time instant in the interval 47 to 200 if ( prop_3 ) or ( prop_1 ) then ( prop_2 ) should be observed , and vice versa .
pred ltl: ( globally [47,200] ( prop_3 or prop_1 ) equal prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , if ( prop_1 ) , and ( prop_2 ) then the following condition is true : at the same time instant ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_1 imply prop_4 ) or prop_3 ) or prop_2 )
gold: If ( prop_1 ) then ( prop_4 ) , or else ( prop_3 ) , or else ( prop_2 ) .
pred ltl: ( ( ( prop_1 imply prop_4 ) or prop_3 ) or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , whenever the scenario that ( prop_1 ) takes place then in response ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( globally ( prop_1 ) imply finally prop_2 )
gold: always ( prop_1 ) can infer that at some time ( prop_2 )
pred ltl: ( globally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and globally ( finally prop_2 ) )
gold: whenever ( prop_1 ) and repeatedly ( prop_2 )
pred ltl: finally ( prop_1 and globally ( finally prop_2 ) )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( globally [178,555] ( prop_2 or prop_3 ) and prop_1 )
gold: For each time instant in the next 178 to 555 time units, either ( prop_2 ) or ( prop_3 ) should be detected , and also ( prop_1 ) .
pred ltl: ( globally [178,555] ( prop_2 or prop_3 ) and prop_1 )

ltl: ( ( ( prop_4 and prop_3 ) and prop_1 ) or prop_2 )
gold: In case that ( prop_4 ) and ( prop_3 ) and ( prop_1 ) are all detected or in case that ( prop_2 ) is detected .
pred ltl: ( ( ( prop_4 and prop_3 ) and prop_1 ) or prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: if ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( prop_1 imply prop_3 ) imply prop_2 )
gold: If it is the case that the scenario where ( prop_1 ) leads to ( prop_3 ) then it should also leads to ( prop_2 ) .
pred ltl: ( ( ( prop_1 imply prop_3 ) imply prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when possible ( prop_1 ) can infer that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( finally ( prop_1 ) and finally prop_2 )
gold: repeatedly ( prop_1 ) and at some time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Whenever ( prop_1 ) or ( prop_2 ) happens, then ( prop_3 ) will be true.
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( globally ( finally prop_1 ) imply prop_2 )
gold: repeatedly ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( globally ( finally prop_1 ) imply prop_2 )

ltl: globally ( prop_1 or prop_2 )
gold: forever ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: globally ( finally prop_1 and prop_2 )
gold: repeatedly ( prop_1 ) and ( prop_2 )
pred ltl: globally ( finally prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: In the case ( prop_1 ) , or ( prop_2 ) , then all of the following conditions hold : immediately ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , in case that the scenario that ( prop_1 ) occurs , then the following condition is true : ( prop_2 ) and the scenario that ( prop_3 ) ought to happen at once .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: In case the event ( prop_1 ) happens, then either ( prop_2 ) or ( prop_3 ) will take place.
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: If the event ( prop_1 ) happens, then the conditions ( prop_2 ) will be true.
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: negation ( prop_1 or finally prop_2 )
gold: don't ( prop_1 ) or when possible ( prop_2 )
pred ltl: negation ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: negation ( prop_1 or prop_2 )
gold: don't ( prop_1 ) or ( prop_2 )
pred ltl: negation ( prop_1 or prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: If the event ( prop_1 ) happens, then ( prop_2 ) will happen and ( prop_3 ) will happen without any delay.
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: whenever ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 and prop_4 ) )
gold: It is always the case that in case that ( prop_1 ) and ( prop_2 ) then simultaneously ( prop_3 ) , and ( prop_4 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 and prop_4 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 or prop_4 ) )
gold: While ( prop_1 ) or ( prop_2 ), ( prop_3 ) or ( prop_4 ) will happen in response.
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: ( ( negation prop_3 imply prop_2 ) and prop_1 )
gold: If it is not the case that ( prop_3 ) then ( prop_2 ) , and ( prop_1 ) .
pred ltl: ( negation ( prop_3 imply prop_2 ) and prop_1 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: when at any time ( prop_1 ) , ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply finally [40,75] prop_3 )
gold: Globally , everytime when ( prop_1 ) or the event that ( prop_2 ) does n't get observed , then the following condition is true : there has to be a certain time instant during the subsequent 40 to 75 time units eventually , at which ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally [40,75] prop_3 )

ltl: negation ( prop_1 and finally prop_2 )
gold: do not ( prop_1 ) and at some time ( prop_2 )
pred ltl: negation ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If ( prop_1 ) then the following condition is true : without any delay the scenario that ( prop_2 ) will take place , and immediately ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: Globally , during the interval that ( prop_1 ) , and the transition action that ( prop_2 ) does not get observed then in response after a time in the future before the end of the simulation , ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: whenever ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: It is always the case that when the event that ( prop_1 ) is detected , then the following condition holds : at the same time instant the event that ( prop_2 ) will happen , or at the same moment ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , when the scenario that ( prop_1 ) happens then without any delay the transition action that ( prop_2 ) will never get observed and the scenario that ( prop_3 ) will get observed at the same moment .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until when possible ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: ( ( ( prop_3 and prop_2 ) or prop_1 ) imply prop_4 )
gold: If ( prop_3 ) and ( prop_2 ) or ( prop_1 ) then ( prop_4 ) .
pred ltl: ( ( ( prop_3 and prop_2 ) or prop_1 ) imply prop_4 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )
gold: It is always the case that while ( prop_1 ) or ( prop_2 ) then in the future before the simulation ends , consecutively ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: negation ( prop_1 and finally prop_2 )
gold: do not ( prop_1 ) and at some time ( prop_2 )
pred ltl: negation ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: ( ( ( prop_1 until prop_3 ) or prop_2 ) and prop_4 )
gold: The scenario that ( prop_1 ) happens until ( prop_3 ) happens , or the scenario that ( prop_2 ) is detected , and also the scenario that ( prop_4 ) is detected .
pred ltl: ( ( ( prop_1 until prop_3 ) or prop_2 ) and prop_4 )

ltl: ( prop_1 imply prop_2 )
gold: ( prop_1 ) means that ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , if the event that ( prop_1 ) is detected , then all of the following conditions are true : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 or globally prop_2 )
gold: ( prop_1 ) or forever ( prop_2 )
pred ltl: ( prop_1 or globally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: When ( prop_1 ) , then the following condition is true : the event that ( prop_2 ) must not occur and at the same moment ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: if whenever ( prop_1 ) , ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: In the case ( prop_1 ) , then the following condition holds : right away ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that if ( prop_1 ) or the transition action that ( prop_2 ) takes place , then the following condition holds : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 until globally ( negation prop_2 ) )
gold: whenever ( prop_1 ) until never ( prop_2 )
pred ltl: finally ( prop_1 until globally ( negation prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( prop_1 and prop_3 ) imply prop_2 )
gold: If ( prop_1 ) and ( prop_3 ) then ( prop_2 ) .
pred ltl: ( ( prop_1 and prop_3 ) imply prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In the case the transition action that ( prop_1 ) occurs and ( prop_2 ) then ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and at some time ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: when possible ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: ( globally ( negation ( prop_1 ) ) imply finally prop_2 )
gold: if never ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( globally ( negation ( prop_1 ) ) imply finally prop_2 )

ltl: ( ( ( prop_4 equal prop_2 ) and prop_3 ) imply prop_1 )
gold: If ( prop_4 ) is equivalent to ( prop_2 ) , and if ( prop_3 ) is observed, then as a result ( prop_1 ) should be observed .
pred ltl: ( ( ( prop_4 equal prop_2 ) and prop_3 ) imply prop_1 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that whenever the event that ( prop_1 ) occurs then the following condition holds : ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that in case that the transition action that ( prop_1 ) gets observed , then the following condition is true : at the same time point ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , whenever ( prop_1 ) , then all of the following conditions are true : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: at any time ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 until prop_2 )
gold: when possible ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: globally ( finally ( prop_1 ) or globally ( finally prop_2 ) )
gold: repeatedly ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or globally ( finally prop_2 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or globally ( finally prop_2 ) )
gold: ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Whenever ( prop_1 ) or ( prop_2 ) , then all of the following conditions hold : at the same time instant ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , everytime when ( prop_1 ) then in response simultaneously ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that whenever ( prop_1 ) then all of the following conditions hold : ( prop_2 ) , and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( negation ( prop_1 ) until globally ( negation prop_2 ) )
gold: never ( prop_1 ) until never ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until globally ( negation prop_2 ) )

ltl: negation ( prop_1 or prop_2 )
gold: don't ( prop_1 ) or ( prop_2 )
pred ltl: negation ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 and prop_2 )
gold: forever ( prop_1 ) and ( prop_2 )
pred ltl: globally ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )
gold: When ( prop_1 ) or the transition action that ( prop_2 ) gets detected then all of the following conditions hold : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: When ( prop_1 ) , then all of the following conditions are true : in no time ( prop_2 ) , or the scenario that ( prop_3 ) ought to take place at the same time .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: During the interval that ( prop_1 ) , and ( prop_2 ) then the following condition holds : ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: When the event that ( prop_1 ) happens , then all of the following conditions are true : at the same time ( prop_2 ) , or the event that ( prop_3 ) ought to immediately get detected .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: As soon as ( prop_1 ) then all of the following conditions hold : ( prop_2 ) and instantly ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: It is always the case that in case that ( prop_1 ) , and ( prop_2 ) , then in response ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( negation ( prop_1 and prop_3 ) equal prop_2 )
gold: If it is not the case that ( prop_1 ) and ( prop_3 ) get detected , then ( prop_2 ) should happen , and vice versa .
pred ltl: ( negation ( prop_1 and prop_3 ) equal prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: ( prop_1 and negation ( finally prop_2 ) )
gold: ( prop_1 ) and don't ( prop_2 )
pred ltl: ( prop_1 and negation prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at any time ( prop_1 ) means that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that whenever the event that ( prop_1 ) does n't get observed or ( prop_2 ) , then the following condition is true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If the scenario ( prop_1 ) takes place, then ( prop_2 ) and ( prop_3 ) will take place at the same time.
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( finally ( prop_1 ) and globally ( negation prop_2 ) )
gold: repeatedly ( prop_1 ) and never ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: negation ( finally ( prop_1 ) and finally prop_2 )
gold: don't ( prop_1 ) and whenever ( prop_2 )
pred ltl: negation ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , during the interval that ( prop_1 ) then the following condition is true : at once ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Every time the scenario ( prop_1 ) takes place, ( prop_2 ) and ( prop_3 ) will happen.
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that while ( prop_1 ) , then all of the following conditions hold : starting without any delay ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: While ( prop_1 ) then the following condition holds : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If the scenario ( prop_1 ) occurs, then the following condition is true: ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: at some time ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( globally ( finally ( prop_1 ) ) imply finally prop_2 )
gold: repeatedly ( prop_1 ) means that at some time ( prop_2 )
pred ltl: ( globally ( finally ( prop_1 ) ) imply finally prop_2 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: whenever ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: When the event that ( prop_1 ) is observed then the following condition holds : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( ( prop_3 equal prop_4 ) or prop_1 ) or prop_2 )
gold: If ( prop_3 ) is equivalent to ( prop_4 ) or ( prop_1 ) is detected or ( prop_2 ) is detected .
pred ltl: ( ( ( prop_3 equal prop_4 ) or prop_1 ) or prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply globally [14,15] ( finally [0,27] prop_2 ) )
gold: Globally , everytime when ( prop_1 ) , then in response for each time instant in the first 14 to 15 time units there has to exist a certain time point in the coming 0 to 27 time units , at which ( prop_2 ) .
pred ltl: globally ( prop_1 imply globally [14,15] ( finally [0,27] prop_2 ) )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that while ( prop_1 ) then ( prop_2 ) .
pred ltl: globally ( prop_1 imply ( prop_2 until prop_2 ) )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: when ( prop_1 ) , ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) until globally ( negation prop_2 ) )
gold: never ( prop_1 ) until never ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until globally ( negation prop_2 ) )

ltl: ( finally prop_1 imply prop_2 )
gold: if whenever ( prop_1 ) , ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )
gold: whenever ( prop_1 ) can infer that never ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: If the scenario that ( prop_1 ) is observed , or ( prop_2 ) , then in response instantly ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 until prop_3 ) )
gold: Globally , whenever the scenario that ( prop_1 ) is detected then all of the following conditions are true : ( prop_2 ) and then this condition will have to consecutively continue until ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 until prop_3 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( negation ( prop_1 ) until finally prop_2 )
gold: never ( prop_1 ) until at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: negation ( prop_1 or finally prop_2 )
gold: don't ( prop_1 ) or at some time ( prop_2 )
pred ltl: negation ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( prop_2 or prop_1 ) until [37,110] prop_3 )
gold: Before a certain time instant within the first 37 to 110 time units either ( prop_2 ) or ( prop_1 ) has to happen , and after that , ( prop_3 ) begins to happen .
pred ltl: ( ( prop_2 or prop_1 ) until [37,110] prop_3 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: ( finally prop_1 imply prop_2 )
gold: at some time ( prop_1 ) means that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: In the case the scenario that ( prop_1 ) is detected then ( prop_2 ) , and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply finally prop_3 )
gold: For every occurrence of ( prop_1 ) and ( prop_2 ), ( prop_3 ) will happen at some point before the execution ends.
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally prop_3 )
gold: While ( prop_1 ) and ( prop_2 ) , then ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that if ( prop_1 ) or ( prop_2 ) , then the following condition holds : simultaneously ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply globally [9,23] ( finally prop_2 ) )
gold: In the case ( prop_1 ) , then for each time instant in the first 9 to 23 time units , there is a certain moment in the future before the end of the execution , at which ( prop_2 ) .
pred ltl: globally ( prop_1 imply globally [9,23] ( finally prop_2 ) )

ltl: negation ( prop_1 or prop_2 )
gold: do not ( prop_1 ) or ( prop_2 )
pred ltl: negation ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( ( prop_1 equal prop_4 ) and prop_2 ) imply prop_3 )
gold: If ( prop_1 ) and ( prop_4 ) are equivalent , and the scenario that ( prop_2 ) is detected then ( prop_3 ) should be observed .
pred ltl: ( ( ( prop_1 equal prop_4 ) imply prop_2 ) imply prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and negation prop_2 )
gold: ( prop_1 ) and do not ( prop_2 )
pred ltl: ( prop_1 and negation prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( ( prop_3 or prop_1 ) or prop_2 )
gold: ( prop_3 ) or ( prop_1 ) or ( prop_2 ) .
pred ltl: ( ( prop_3 or prop_1 ) or prop_2 )

ltl: ( ( ( prop_1 imply prop_3 ) or prop_4 ) until prop_2 )
gold: If it is the case that ( prop_1 ) then implies ( prop_3 ) , or else ( prop_4 ) , until ( prop_2 ) .
pred ltl: ( ( ( prop_1 imply prop_3 ) or prop_4 ) until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is required that at a certain point in the future , ( prop_1 ) or ( prop_2 ) then ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: When the transition action that ( prop_1 ) occurs , then the following condition is true : in no time ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: negation ( prop_1 or finally prop_2 )
gold: don't ( prop_1 ) or at some time ( prop_2 )
pred ltl: negation ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that in case that the transition action that ( prop_1 ) gets detected then the following condition holds : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: at any time ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( negation ( prop_3 or prop_1 ) and prop_2 )
gold: Either ( prop_3 ) or ( prop_1 ) should not happen , and ( prop_2 ) .
pred ltl: ( negation ( prop_3 or prop_1 ) and prop_2 )

ltl: globally ( prop_1 or globally prop_2 )
gold: forever ( prop_1 ) or forever ( prop_2 )
pred ltl: globally ( prop_1 or globally prop_2 )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_3 equal prop_4 ) until [333,608] prop_1 ) imply prop_2 )
gold: If at some point ( prop_3 ) is equivalent to ( prop_4 ) and this scenario continues until at some other point during the 333 to 608 time units that ( prop_1 ) is detected , then ( prop_2 ) .
pred ltl: ( ( ( prop_3 equal prop_4 ) until [333,608] prop_1 ) imply prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at some time ( prop_1 ) means that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) can infer that when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In the case the scenario that ( prop_1 ) is n't observed and ( prop_2 ) , then in response ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: when possible ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: whenever ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: If the event that ( prop_1 ) occurs then all of the following conditions are true : at the same moment ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( finally ( prop_2 equal prop_1 ) imply prop_3 )
gold: It is required that at some point in the future ( prop_2 ) is equivalent to ( prop_1 ) , and as a result ( prop_3 ) .
pred ltl: ( finally ( prop_2 equal prop_1 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( ( globally prop_2 or prop_1 ) or prop_3 )
gold: For all time instants in the future ( prop_2 ) should be detected , or ( prop_1 ) happens in one time , or else ( prop_3 ) happens in one time .
pred ltl: ( ( globally ( prop_2 or prop_1 ) or prop_3 )

ltl: globally ( finally ( prop_1 ) and negation prop_2 )
gold: repeatedly ( prop_1 ) and don't ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and negation prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 or prop_2 )
gold: forever ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at any time ( prop_1 ) means that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when whenever ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that in case that the event that ( prop_1 ) gets detected then all of the following conditions are true : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: Globally , in case that ( prop_1 ) , and the transition action that ( prop_2 ) occurs then all of the following conditions hold : eventually there should exist a certain time instant in the future before the simulation ends , after which ( prop_3 ) and this scenario will have to uninterruptedly sustain in the future .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: ( ( prop_2 until [319,738] prop_1 ) equal prop_3 )
gold: The scenario that ( prop_2 ) should happen and continue until at some time instant within the coming 319 to 738 time units that ( prop_1 ) happens, is equivalent to the scenario that ( prop_3 ) should be observed .
pred ltl: ( ( prop_2 until [319,738] prop_1 ) equal prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that if the scenario that ( prop_1 ) is observed then all of the following conditions are true : without any delay ( prop_2 ) and the transition action that ( prop_3 ) has to be immediately observed .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when whenever ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 or prop_3 ) imply prop_2 )
gold: It is required that at some point in the future , either ( prop_1 ) or ( prop_3 ) should be detected , then as a response ( prop_2 ) .
pred ltl: ( finally ( prop_1 or prop_3 ) imply prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , when the event that ( prop_1 ) gets observed , then all of the following conditions are true : ( prop_2 ) and at the same time point ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( globally ( negation ( prop_1 ) ) imply finally prop_2 )
gold: when never ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( globally ( negation ( prop_1 ) ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: at any time ( prop_1 ) and always ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: It is always the case that if the scenario that ( prop_1 ) occurs and ( prop_2 ) , then without any delay ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: negation ( prop_1 and finally prop_2 )
gold: do not ( prop_1 ) and at any time ( prop_2 )
pred ltl: negation ( finally ( prop_1 ) and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: The following condition always holds when ( prop_1 ) or ( prop_2 ) : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 until prop_2 )
gold: when possible ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: at some time ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) means that at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( finally ( prop_1 ) and finally prop_2 )
gold: repeatedly ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and finally prop_2 )

ltl: ( prop_1 imply negation prop_2 )
gold: when ( prop_1 ) , do not ( prop_2 )
pred ltl: ( prop_1 imply negation prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( ( prop_2 until prop_1 ) imply prop_3 ) and prop_4 )
gold: If ( prop_2 ) happens and continues to happen until ( prop_1 ) is detected , then ( prop_3 ) , and ( prop_4 ) .
pred ltl: ( ( ( prop_2 until prop_1 ) imply prop_3 ) and prop_4 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: On condition that ( prop_1 ) , or ( prop_2 ) then in response at the same time instant ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally [34,40] prop_3 )
gold: In case that ( prop_1 ) , or ( prop_2 ) then ( prop_3 ) and this scenario continues uninterruptedly for the following 34 to 40 time units .
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally [34,40] prop_3 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: whenever ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: As soon as ( prop_1 ) then all of the following conditions hold : at once ( prop_2 ) and starting without any delay ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Globally , everytime when the transition action that ( prop_1 ) occurs , then in response ( prop_2 ) , or instantly ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: During the interval that ( prop_1 ) or ( prop_2 ) then at the same moment ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , when ( prop_1 ) then immediately ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply globally ( finally prop_2 ) )
gold: whenever ( prop_1 ) can infer that repeatedly ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply globally ( finally prop_2 ) )

ltl: negation ( prop_1 until finally prop_2 )
gold: do not ( prop_1 ) until at any time ( prop_2 )
pred ltl: negation ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: It is always the case that when the scenario that ( prop_1 ) takes place then in response ( prop_2 ) and the scenario that ( prop_3 ) ought to be immediately detected .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: In the event that ( prop_1 ) , or ( prop_2 ) , then all of the following conditions hold : at the same moment ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( negation ( prop_2 imply prop_1 ) imply prop_3 )
gold: If it is not the case that ( prop_1 ) happens in response to ( prop_2 ) then implies ( prop_3 ) .
pred ltl: ( negation ( prop_1 imply prop_2 ) imply prop_3 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( ( ( prop_2 or prop_1 ) until prop_3 ) and prop_4 )
gold: The scenario that ( prop_2 ) or the scenario that ( prop_1 ) should always be true until ( prop_3 ) happens at some point in the future , and also ( prop_4 ) should be true .
pred ltl: ( ( ( prop_2 or prop_1 ) until prop_3 ) and prop_4 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , in case that the event that ( prop_1 ) takes place then the following condition is true : without any delay ( prop_2 ) and the event that ( prop_3 ) occurs at once .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that in case that ( prop_1 ) , or ( prop_2 ) , then the following condition is true : instantly ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( ( globally [149,154] prop_2 imply prop_1 ) or prop_3 )
gold: In case that at each time instant in the next 149 to 154 time units the scenario that ( prop_2 ) should be observed , then in response ( prop_1 ) should happen , or else if ( prop_3 ) .
pred ltl: ( ( globally [149,154] prop_2 imply prop_1 ) or prop_3 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if at any time ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and at some time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when possible ( prop_1 ) can infer that when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [0,56] prop_3 )
gold: It is always the case that whenever the event that ( prop_1 ) takes place and ( prop_2 ) , then for every time instant in the following 0 to 56 time units , ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [0,56] prop_3 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( ( prop_2 or prop_1 ) and prop_3 ) and prop_4 )
gold: The scenario that ( prop_2 ) or ( prop_1 ) , and the scenario that ( prop_3 ) , and the scenario that ( prop_4 ) all should be detected .
pred ltl: ( ( ( prop_2 or prop_1 ) and prop_1 ) and prop_1 ) imply prop_4 )

ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )
gold: at some time ( prop_1 ) can infer that never ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if at some time ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )
gold: Whenever ( prop_1 ) or ( prop_2 ) happens, then ( prop_3 ) and the event ( prop_4 ) will take place.
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 and prop_4 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( negation ( prop_1 ) until finally prop_2 )
gold: never ( prop_1 ) until at some time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , when the event that ( prop_1 ) happens , then the following condition is true : ( prop_2 ) and the transition action that ( prop_3 ) should be observed without any delay .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_2 or prop_4 ) equal prop_1 ) and prop_3 )
gold: ( prop_2 ) or ( prop_4 ) should happen , and the above scenario is equivalent to ( prop_1 ) , and also ( prop_3 ) .
pred ltl: ( ( ( prop_2 or prop_4 ) equal prop_1 ) and prop_3 )

ltl: globally ( finally prop_1 until prop_2 )
gold: repeatedly ( prop_1 ) until ( prop_2 )
pred ltl: globally ( finally prop_1 until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or prop_2 )
gold: forever ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: As soon as the transition action that ( prop_1 ) , then at the same time ( prop_2 ) and at once ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If ( prop_1 ) then at the same time point ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( prop_1 and prop_2 )
gold: forever ( prop_1 ) and ( prop_2 )
pred ltl: globally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally [46,56] ( globally [2,8] prop_3 ) )
gold: If the scenario ( prop_2 ) does not get observed during the interval ( prop_1 ), then there ought to be a certain time instant during the subsequent 46 to 56 time units, at which ( prop_3 ) will be observed for the subsequent 2 to 8 time units.
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally [46,56] ( globally [2,8] prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: As soon as the event that ( prop_1 ) is observed then the following condition is true : starting without any delay ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: ( finally prop_1 imply prop_2 )
gold: at some time ( prop_1 ) means that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at any time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 until negation prop_2 )
gold: at some time ( prop_1 ) until do not ( prop_2 )
pred ltl: finally ( prop_1 until negation prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: whenever ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( ( prop_3 equal prop_2 ) and prop_1 )
gold: ( prop_3 ) is equivalent to ( prop_2 ) , and ( prop_1 ) .
pred ltl: ( ( prop_3 equal prop_2 ) and prop_1 )

ltl: ( prop_1 or globally ( finally prop_2 ) )
gold: ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( negation ( prop_1 or prop_3 ) until prop_2 )
gold: It is not the case that ( prop_1 ) or ( prop_3 ) is detected until ( prop_2 ) is detected .
pred ltl: ( negation ( prop_1 or prop_3 ) until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Whenever the event that ( prop_1 ) occurs then the following condition holds : starting without any delay ( prop_2 ) or without any delay ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: finally ( prop_1 and globally prop_2 )
gold: when possible ( prop_1 ) and forever ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: globally ( prop_1 imply globally [18,63] ( finally prop_2 ) )
gold: In case ( prop_1 ), ( prop_2 ) will be detected finally at some point before the end of the execution. This will happen for every time point during the first 18 to 63 time units.
pred ltl: globally ( prop_1 imply ( prop_2 until [18,63] prop_3 ) )

ltl: ( finally ( prop_1 ) imply negation ( finally prop_2 ) )
gold: when possible ( prop_1 ) can infer that don't ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply negation ( finally prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( finally prop_1 until prop_2 )
gold: repeatedly ( prop_1 ) until ( prop_2 )
pred ltl: globally ( finally prop_1 until prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: When the scenario that ( prop_1 ) occurs then all of the following conditions are true : ( prop_2 ) , and the scenario that ( prop_3 ) must be observed in no time .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( finally prop_1 or prop_2 )
gold: repeatedly ( prop_1 ) or ( prop_2 )
pred ltl: globally ( finally prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that whenever the scenario that ( prop_1 ) takes place then in response ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: ( globally ( prop_1 ) imply finally prop_2 )
gold: forever ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( globally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 and prop_4 ) )
gold: It is always the case that when ( prop_1 ) and ( prop_2 ) happen, then ( prop_3 ) will be true and the transition action ( prop_4 ) will take place.
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 and prop_4 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply finally ( globally prop_3 ) )
gold: Globally , while ( prop_1 ) or ( prop_2 ) , then all of the following conditions hold : there must eventually exist sometime in the future before the end of the execution , at which ( prop_3 ) and this scenario will consistently remain in the future till the end of the simulation .
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally ( globally prop_3 ) )

ltl: globally ( finally prop_1 or prop_2 )
gold: repeatedly ( prop_1 ) or ( prop_2 )
pred ltl: globally ( finally prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally prop_2 )
gold: at some time ( prop_1 ) or always ( prop_2 )
pred ltl: finally ( prop_1 or globally prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: when possible ( prop_1 ) and always ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: ( finally [355,471] ( prop_1 or prop_2 ) equal prop_3 )
gold: At some point during the 355 to 471 time units it should be the case that ( prop_1 ) or ( prop_2 ) is detected if and only if ( prop_3 ) .
pred ltl: ( finally [355,471] ( prop_1 or prop_2 ) equal prop_3 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , when the transition action that ( prop_1 ) is detected , then in response ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( negation ( prop_1 ) and globally ( finally prop_2 ) )
gold: never ( prop_1 ) and repeatedly ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and globally ( finally prop_2 ) )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , when the scenario that ( prop_1 ) is detected then all of the following conditions are true : simultaneously ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: ( globally ( prop_1 ) imply finally prop_2 )
gold: forever ( prop_1 ) can infer that at some time ( prop_2 )
pred ltl: ( globally ( prop_1 ) imply finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and globally ( finally prop_2 ) )
gold: ( prop_1 ) and repeatedly ( prop_2 )
pred ltl: ( prop_1 and globally ( finally prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_1 until prop_2 ) and prop_4 ) imply prop_3 )
gold: If at some point ( prop_1 ) happens and continues to happen until ( prop_2 ) is detected , and ( prop_4 ) , then ( prop_3 ) .
pred ltl: ( ( ( prop_1 until prop_2 ) and prop_4 ) imply prop_3 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Whenever the event ( prop_1 ) is observed, then ( prop_2 ) and the transition action ( prop_3 ) will be observed without any delay.
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( finally prop_1 imply prop_2 )
gold: whenever ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: globally ( finally ( prop_1 ) and finally prop_2 )
gold: repeatedly ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and finally prop_2 )

ltl: globally ( finally prop_1 until prop_2 )
gold: repeatedly ( prop_1 ) until ( prop_2 )
pred ltl: globally ( finally prop_1 until prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally [46,58] prop_3 )
gold: If ( prop_1 ) or ( prop_2 ) then ( prop_3 ) will be observed within the next 46 to 58 time units.
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally [46,58] prop_3 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( ( prop_4 and prop_1 ) until prop_2 ) equal prop_3 )
gold: If ( prop_4 ) and ( prop_1 ) happens and continues to happen until at some other point ( prop_2 ) is detected , then the scenario is equivalent to ( prop_3 ) .
pred ltl: ( ( ( prop_4 and prop_1 ) until prop_2 ) equal prop_3 )

ltl: finally ( prop_2 or finally prop_3 )
gold: when possible ( prop_1 ) ( prop_2 ) or at any time ( prop_3 )
pred ltl: finally ( prop_2 or finally prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: In the case ( prop_1 ) , then all of the following conditions hold : ( prop_2 ) , and simultaneously ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) means that at some time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply finally [4,28] prop_3 )
gold: Whenever ( prop_1 ) or the event ( prop_2 ) is observed, the condition ( prop_3 ) will exist at some point within the next 4 to 28 time units.
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally [4,28] prop_3 )

ltl: ( prop_1 until negation prop_2 )
gold: ( prop_1 ) until do not ( prop_2 )
pred ltl: ( prop_1 until negation prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: ( prop_1 or globally prop_2 )
gold: ( prop_1 ) or forever ( prop_2 )
pred ltl: ( prop_1 or globally prop_2 )

ltl: ( negation prop_2 imply prop_1 )
gold: If it is not the case that ( prop_2 ) then ( prop_1 ) .
pred ltl: ( negation ( prop_2 imply prop_1 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: at some time ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , whenever the scenario that ( prop_1 ) gets observed , then the following condition is true : ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: When the transition action that ( prop_1 ) takes place , then in response ( prop_2 ) , and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: Globally , during the interval that ( prop_1 ) and ( prop_2 ) , then there will finally exist sometime in the future before the end of the execution , at which ( prop_3 ) then consistently this scenario has to continue for every time point during the next 36 to 93 time units .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( ( ( prop_3 equal prop_1 ) imply prop_4 ) imply prop_2 )
gold: If it is the case that ( prop_3 ) is equivalent to ( prop_1 ) then implies ( prop_4 ) should hold , then implies ( prop_2 ) .
pred ltl: ( ( ( prop_3 equal prop_1 ) imply prop_4 ) imply prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or globally prop_2 )
gold: at any time ( prop_1 ) or always ( prop_2 )
pred ltl: finally ( prop_1 or globally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at some time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( ( prop_2 imply prop_3 ) and prop_1 )
gold: If ( prop_2 ) then ( prop_3 ) and also ( prop_1 ) .
pred ltl: ( ( prop_2 imply prop_3 ) and prop_1 )

ltl: ( ( ( prop_1 and prop_2 ) equal prop_4 ) until prop_3 )
gold: If ( prop_1 ) and ( prop_2 ) is equivalent to ( prop_4 ) then this scenario will hold until ( prop_3 ) .
pred ltl: ( ( ( prop_1 and prop_2 ) imply prop_4 ) until prop_3 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [6,16] prop_3 )
gold: It is always the case that in case that ( prop_1 ) and the transition action that ( prop_2 ) occurs then all of the following conditions are true : ( prop_3 ) then this scenario will have to hold consistently for each moment during the coming 6 to 16 time units .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [6,16] prop_3 )

ltl: ( negation ( prop_3 or prop_2 ) imply prop_1 )
gold: If it is not the case that ( prop_3 ) or ( prop_2 ) then ( prop_1 ) .
pred ltl: ( negation ( prop_3 or prop_2 ) imply prop_1 )

ltl: globally ( negation ( prop_1 ) or globally ( negation prop_2 ) )
gold: never ( prop_1 ) or never ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or globally ( negation prop_2 ) )

ltl: ( prop_1 until prop_2 )
gold: ( prop_1 ) until ( prop_2 )
pred ltl: ( prop_1 until prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( finally ( prop_1 ) imply negation prop_2 )
gold: at any time ( prop_1 ) means that don't ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply negation prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Whenever ( prop_1 ) happens, then ( prop_2 ) is true and the transition action ( prop_3 ) will be observed.
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Whenever ( prop_1 ) , and the transition action that ( prop_2 ) gets observed then in response ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: In the case the scenario that ( prop_1 ) takes place , then the following condition holds : immediately ( prop_2 ) and the transition action that ( prop_3 ) will get observed immediately .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 and negation prop_2 )
gold: ( prop_1 ) and do not ( prop_2 )
pred ltl: ( prop_1 and negation prop_2 )

ltl: ( ( ( prop_1 imply prop_4 ) until [102,542] prop_3 ) or prop_2 )
gold: If at some point ( prop_1 ) then ( prop_4 ) and this scenario will hold until at some other point during the 102 to 542 time units ( prop_3 ) is detected , or else ( prop_2 ) .
pred ltl: ( ( ( prop_1 imply prop_4 ) until [102,542] prop_3 ) or prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )
gold: On condition that ( prop_1 ) and ( prop_2 ) , then all of the following conditions are true : at once the scenario that ( prop_3 ) should be observed , or ( prop_4 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( globally ( finally ( prop_1 ) ) imply finally prop_2 )
gold: if repeatedly ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( globally ( finally ( prop_1 ) ) imply finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and negation prop_2 )
gold: when possible ( prop_1 ) and don't ( prop_2 )
pred ltl: finally ( prop_1 and negation prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In the case of ( prop_1 ) and ( prop_2 ), the following conditions will all be true: ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In the case ( prop_1 ) and ( prop_2 ) then in response at the same time ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( ( negation prop_3 until [109,379] prop_1 ) or prop_2 )
gold: ( prop_3 ) will not happen until at some point during the 109 to 379 time units ( prop_1 ) is detected , or ( prop_2 ) .
pred ltl: ( ( negation prop_3 until [109,379 prop_1 ) or prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and whenever ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: When the event ( prop_1 ) happens, then either ( prop_2 ) or the scenario ( prop_3 ) will take place.
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: negation ( finally prop_1 or prop_2 )
gold: don't ( prop_1 ) or ( prop_2 )
pred ltl: negation ( prop_1 or prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_4 until [4,49] prop_3 ) )
gold: It is always the case that when ( prop_1 ) and ( prop_2 ) are true, then ( prop_3 ) will be true at some point in the next 4 to 49 time units. However, before that ( prop_4 ) will be true.
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_4 until [4,49] prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: ( ( negation prop_1 and prop_2 ) equal prop_3 )
gold: It is equivalent to have a scenario in which ( prop_1 ) is not the case and ( prop_2 ) is , or to have ( prop_3 ) .
pred ltl: ( ( negation prop_1 and prop_2 ) equal prop_3 )

ltl: globally ( prop_1 and prop_2 )
gold: always ( prop_1 ) and ( prop_2 )
pred ltl: globally ( prop_1 and prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( ( prop_2 imply prop_4 ) and prop_1 ) and prop_3 )
gold: If ( prop_2 ) then ( prop_4 ) , and ( prop_1 ) , and ( prop_3 ) .
pred ltl: ( ( ( prop_2 imply prop_4 ) and prop_1 ) and prop_3 )

ltl: ( finally [369,497] ( prop_1 equal prop_2 ) or prop_3 )
gold: There should be a certain moment during the next 369 to 497 time units in the future , at which either the scenario that ( prop_1 ) should be equivalent to the scenario that ( prop_2 ) , or the scenario that ( prop_3 ) should be observed .
pred ltl: ( finally [365,497] ( prop_1 equal prop_2 ) or prop_3 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( globally ( prop_2 or prop_3 ) or prop_1 )
gold: For each time instant in the coming time units either ( prop_2 ) or ( prop_3 ) should be detected , or else ( prop_1 ) .
pred ltl: ( globally ( prop_2 or prop_3 ) or prop_1 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: when possible ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: ( ( ( prop_3 and prop_1 ) until prop_4 ) and prop_2 )
gold: The scenario that ( prop_3 ) and ( prop_1 ) should always be detected until ( prop_4 ) is true at some time in the future , and ( prop_2 ) shoud be true.
pred ltl: ( ( ( prop_3 and prop_1 ) until prop_4 ) and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_1 imply prop_4 ) and prop_2 ) and prop_3 )
gold: The scenario that ( prop_1 ) should imply the scenario that ( prop_4 ) , and the scenario that ( prop_2 ) , and the scenario that ( prop_3 ) .
pred ltl: ( ( ( prop_1 imply prop_4 ) and prop_2 ) and prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply globally [24,31] prop_2 )
gold: When ( prop_1 ) happens, then ( prop_2 ) will hold in response within 24 to 31 time units.
pred ltl: globally ( prop_1 imply globally [24,31] prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 until prop_2 )
gold: forever ( prop_1 ) until ( prop_2 )
pred ltl: globally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , when the event that ( prop_1 ) happens then the following condition is true : without any delay ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_3 or prop_2 ) and prop_4 ) or prop_1 )
gold: The scenario in which ( prop_3 ) or ( prop_2 ) is detected and at the same time ( prop_4 ) is detected , or ( prop_1 ) .
pred ltl: ( ( ( prop_3 or prop_2 ) and prop_4 ) or prop_1 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: if ( prop_1 ) , whenever ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [12,29] ( finally [54,81] prop_3 ) )
gold: In the event that ( prop_1 ) , and ( prop_2 ) , then the following condition holds : for each moment in the next 12 to 29 time units at a time in the subsequent 54 to 81 time units , finally the scenario that ( prop_3 ) ought not to get detected .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [12,29] ( finally [ignor] prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and globally prop_2 )
gold: at any time ( prop_1 ) and always ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at any time ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 and negation prop_2 )
gold: at any time ( prop_1 ) and don't ( prop_2 )
pred ltl: finally ( prop_1 and negation prop_2 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at any time ( prop_1 ) until at any time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_3 until [26,73] prop_2 ) )
gold: In case that the scenario that ( prop_1 ) is detected then in response at a certain time point during the first 26 to 73 time units the scenario that ( prop_2 ) should happen ultimately , and before this ( prop_3 ) .
pred ltl: ( prop_1 imply ( prop_3 until [26,73] prop_2 ) )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 until prop_3 ) )
gold: If ( prop_1 ) happens, then ( prop_2 ) will have to last until ( prop_3 ) happens.
pred ltl: globally ( prop_1 imply ( prop_2 until prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or negation prop_2 )
gold: at some time ( prop_1 ) or don't ( prop_2 )
pred ltl: finally ( prop_1 or negation prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 imply globally ( negation prop_2 ) )
gold: when ( prop_1 ) , never ( prop_2 )
pred ltl: ( prop_1 imply globally ( negation prop_2 ) )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: at some time ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( ( ( prop_4 until prop_3 ) equal prop_1 ) and prop_2 )
gold: It is required that for a time instant when ( prop_4 ) continues to happen until ( prop_3 ) happens , this is equivalent to ( prop_1 ) being true , and ( prop_2 ) .
pred ltl: ( ( ( prop_4 until prop_3 ) equal prop_1 ) and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when possible ( prop_1 ) means that at some time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at any time ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( globally ( prop_3 equal prop_1 ) equal prop_2 )
gold: If it is globally the case that ( prop_3 ) if and only if ( prop_1 ) then ( prop_2 ) should be true , and vice versa .
pred ltl: ( globally ( prop_3 equal prop_1 ) equal prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( ( ( prop_4 equal prop_1 ) or prop_2 ) imply prop_3 )
gold: If ( prop_4 ) is equivalent to ( prop_1 ) or ( prop_2 ) is true , then ( prop_3 ) .
pred ltl: ( ( ( prop_4 equal prop_1 ) or prop_2 ) imply prop_3 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: when ( prop_1 ) , ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If ( prop_1 ) , then all of the following conditions are true : right away ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when whenever ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , everytime when the event that ( prop_1 ) happens and the transition action that ( prop_2 ) occurs then without any delay ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 or prop_4 ) )
gold: It is always the case that in case that ( prop_1 ) or the scenario that ( prop_2 ) takes place then all of the following conditions are true : ( prop_3 ) , or ( prop_4 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: when ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at some time ( prop_1 ) can infer that at some time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Globally , in case that the scenario that ( prop_1 ) gets observed then the following condition is true : starting without any delay ( prop_2 ) and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , whenever ( prop_1 ) and ( prop_2 ) , then in response ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at any time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 imply globally ( finally prop_2 ) )
gold: when ( prop_1 ) , repeatedly ( prop_2 )
pred ltl: ( prop_1 imply globally ( finally prop_2 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )
gold: In the case ( prop_1 ) and ( prop_2 ) then in response at once ( prop_3 ) , or without any delay ( prop_4 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 until globally ( negation prop_2 ) )
gold: at some time ( prop_1 ) until never ( prop_2 )
pred ltl: finally ( prop_1 until globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( ( ( prop_3 until [391,525] prop_2 ) and prop_1 ) and prop_4 )
gold: In case that ( prop_3 ) continues to happen until at some point during the first 391 to 525 time units that ( prop_2 ) happens , as well as ( prop_1 ) , and ( prop_4 ) then .
pred ltl: ( ( ( prop_3 until [391,525] prop_2 ) and prop_1 ) and prop_4 )

ltl: negation ( prop_1 and finally prop_2 )
gold: don't ( prop_1 ) and when possible ( prop_2 )
pred ltl: negation ( finally ( prop_1 ) and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply globally [36,57] ( finally [20,47] prop_2 ) )
gold: The following condition is true every time ( prop_1 ) happens: eventually ( prop_2 ) will happen within 20 to 47 time units.
pred ltl: globally ( prop_1 imply finally [20,47] prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( globally ( negation ( prop_1 ) ) imply finally prop_2 )
gold: if never ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( globally ( negation ( prop_1 ) ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) can infer that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: ( negation ( finally [95,437] prop_1 ) imply prop_2 )
gold: If it is not the case that at a certain time point within the next 95 to 437 time units ( prop_1 ) should be observed then it should be the case that ( prop_2 ) .
pred ltl: ( negation ( finally [95,437] prop_1 ) imply prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: when whenever ( prop_1 ) , ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: If ( prop_1 ) and ( prop_2 ) are true, then ( prop_3 ) will happen without any delay.
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that if the scenario that ( prop_1 ) is observed , then the following condition holds : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [28,48] ( finally prop_3 ) )
gold: For every occurrence of ( prop_1 ) and ( prop_2 ), at each time point during the following 28 to 48 time units ( prop_3 ) will happen at some point before the execution ends.
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [28,48] prop_3 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , whenever ( prop_1 ) then all of the following conditions are true : immediately ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( ( negation prop_3 equal prop_1 ) and prop_2 )
gold: ( prop_3 ) is not true should be equivalent to the case that ( prop_1 ) is true , and also ( prop_2 ) .
pred ltl: ( ( negation prop_3 equal prop_1 ) and prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if when possible ( prop_1 ) , whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: In the case the scenario that ( prop_1 ) occurs , then all of the following conditions are true : at the same time ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: During the interval that ( prop_1 ) and ( prop_2 ) then ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_1 imply prop_3 ) equal prop_2 ) imply prop_4 )
gold: If it is the case that ( prop_1 ) then ( prop_3 ) is equivalent to ( prop_2 ) , then ( prop_4 ) .
pred ltl: ( ( ( prop_1 imply prop_3 ) equal prop_2 ) imply prop_4 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Globally , while ( prop_1 ) , and ( prop_2 ) then the following condition holds : without any delay ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: when possible ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if whenever ( prop_1 ) , at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( negation ( prop_3 or prop_2 ) imply prop_1 )
gold: If it is not the case that ( prop_3 ) or ( prop_2 ) then ( prop_1 ) .
pred ltl: ( negation ( prop_3 or prop_2 ) imply prop_1 )

ltl: globally ( prop_1 imply prop_2 )
gold: When the event that ( prop_1 ) happens , then ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: In the case the transition action that ( prop_1 ) is observed then the following condition is true : promptly the scenario that ( prop_2 ) ought not to happen and the transition action that ( prop_3 ) should be observed at the same time instant .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( ( ( prop_1 and prop_2 ) or prop_4 ) or prop_3 )
gold: At some point ( prop_1 ) and ( prop_2 ) , or else ( prop_4 ) , or else ( prop_3 ) .
pred ltl: ( ( ( prop_1 and prop_2 ) or prop_4 ) or prop_3 )

ltl: globally ( ( prop_1 or prop_2 ) imply finally [4,28] prop_3 )
gold: Whenever ( prop_1 ) , or the event that ( prop_2 ) gets observed then the following condition is true : there exists a certain moment within the next 4 to 28 time units , at which finally ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally [4,28] prop_3 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at any time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that when the event that ( prop_1 ) takes place , then at the same time point ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( finally [110,262] ( prop_2 imply prop_3 ) equal prop_1 )
gold: Finally for any time instant within the next 110 to 262 time units while the scenario that ( prop_2 ) happens the scenario that ( prop_3 ) should also happen if and only if ( prop_1 ) is detected .
pred ltl: ( finally [110,262] ( prop_2 imply prop_3 ) equal prop_1 )

ltl: ( finally prop_1 imply prop_2 )
gold: at any time ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( negation ( prop_3 or prop_1 ) imply prop_2 )
gold: If ( prop_3 ) or ( prop_1 ) does not happen , then ( prop_2 ) .
pred ltl: ( negation ( prop_3 or prop_1 ) imply prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( prop_3 and prop_2 ) or prop_1 )
gold: Either ( prop_3 ) and ( prop_2 ) , or else ( prop_1 ) .
pred ltl: ( ( prop_3 and prop_2 ) or prop_1 )

ltl: ( globally ( finally prop_1 ) imply prop_2 )
gold: when repeatedly ( prop_1 ) , ( prop_2 )
pred ltl: ( globally ( finally prop_1 ) imply prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: whenever ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: whenever ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 or globally prop_2 )
gold: at some time ( prop_1 ) or forever ( prop_2 )
pred ltl: finally ( prop_1 or globally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: if ( prop_1 ) , ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and at some time ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( finally [2,246] ( prop_3 imply prop_2 ) and prop_1 )
gold: For one certain moment within the next 2 to 246 time units , while the scenario that ( prop_3 ) is observed implies that ( prop_2 ) should happen , and ( prop_1 ) .
pred ltl: ( ( finally [2,246] prop_3 imply prop_2 ) and prop_1 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at some time ( prop_1 ) means that at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or globally prop_2 )
gold: always ( prop_1 ) or always ( prop_2 )
pred ltl: globally ( prop_1 or globally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Globally , when the event that ( prop_1 ) is observed , then the following condition is true : at the same time point ( prop_2 ) or at the same time ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply ( prop_3 until [10,82] prop_2 ) )
gold: In case the scenario ( prop_1 ) happens, ( prop_2 ) will happen in response within the first 10 to 82 time units, and ( prop_3 ) will happen until then.
pred ltl: globally ( prop_1 imply ( prop_3 until [10,82] prop_2 ) )

ltl: globally ( negation prop_1 until prop_2 )
gold: never ( prop_1 ) until ( prop_2 )
pred ltl: globally ( negation prop_1 until prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: Globally , everytime when ( prop_1 ) or ( prop_2 ) , then all of the following conditions are true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Whenever the scenario ( prop_1 ) is observed, the following conditions will be true: ( prop_2 ) will not take place.
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( ( ( prop_4 imply prop_3 ) until [379,673] prop_1 ) and prop_2 )
gold: If at some point ( prop_4 ) then ( prop_3 ) happens and this scenario will hold until at some other point during the 379 to 673 time units ( prop_1 ) is detected , and ( prop_2 ) .
pred ltl: ( ( ( prop_4 imply prop_3 ) until [379,683] prop_1 ) and prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: whenever ( prop_1 ) can infer that at any time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( prop_1 and finally prop_2 )
gold: forever ( prop_1 ) and at any time ( prop_2 )
pred ltl: globally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: If the transition action ( prop_1 ) is observed, then ( prop_2 ) is always true.
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at any time ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: when possible ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: finally ( prop_1 or globally prop_2 )
gold: whenever ( prop_1 ) or always ( prop_2 )
pred ltl: finally ( prop_1 or globally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: if ( prop_1 ) , ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: Every time the event ( prop_1 ) is detected, the transition action ( prop_2 ) happens simultaneously and at the same time ( prop_3 ).
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: globally ( finally ( prop_1 ) or finally prop_2 )
gold: repeatedly ( prop_1 ) or at any time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( finally ( prop_1 ) until finally prop_2 )
gold: repeatedly ( prop_1 ) until at some time ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) until finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( prop_2 until [117,349] prop_1 ) imply prop_3 )
gold: If there is a certain moment within the next 117 to 349 time units in which ( prop_1 ) , and before this ( prop_2 ) continues to happen, then ( prop_3 ) should be observed .
pred ltl: ( ( finally [117,349] prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( prop_1 or prop_2 )
gold: always ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when at some time ( prop_1 ) , whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: In case that ( prop_1 ) , or ( prop_2 ) , then all of the following conditions hold : simultaneously ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( prop_1 imply prop_2 )
gold: Whenever ( prop_1 ) happens, ( prop_2 ) will always be the case.
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that whenever ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Globally , if the transition action that ( prop_1 ) is observed , then in response simultaneously ( prop_2 ) , or at once the transition action that ( prop_3 ) ought to get detected .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply globally [36,57] ( finally [20,47] prop_2 ) )
gold: Everytime when ( prop_1 ) then the following condition is true : for every time instant during the first 36 to 57 time units eventually at a certain moment within 20 to 47 time units ( prop_2 ) .
pred ltl: globally ( prop_1 imply globally [36,57] ( finally [20,47] prop_2 ) )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: In case that ( prop_1 ) , or ( prop_2 ) , then all of the following conditions are true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( ( ( prop_3 equal prop_1 ) or prop_4 ) or prop_2 )
gold: It is required that ( prop_3 ) if and only if ( prop_1 ) or ( prop_4 ) or ( prop_2 ) .
pred ltl: ( ( ( prop_3 equal prop_1 ) or prop_4 ) or prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until when possible ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: As soon as ( prop_1 ) , or ( prop_2 ) , then the following condition is true : ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally [46,58] prop_3 )
gold: If ( prop_1 ) or ( prop_2 ) then ( prop_3 ) will hold for the next 46 to 58 time units.
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally [46,58] prop_3 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: whenever ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )
gold: In the event that ( prop_1 ) , and the scenario that ( prop_2 ) does n't occur , then the following condition holds : there should be eventually sometime in the future before the simulation ends , at which ( prop_3 ) and this scenario will have to sustain all the time for every time point in the subsequent 0 time units .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if at some time ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( ( prop_1 or prop_3 ) until prop_2 ) imply prop_4 )
gold: In case that ( prop_1 ) or ( prop_3 ) is happening until a time point that ( prop_2 ) should occur , then as a result ( prop_4 ) .
pred ltl: ( ( ( prop_1 or prop_3 ) until prop_2 ) imply prop_4 )

ltl: globally ( prop_1 or finally prop_2 )
gold: forever ( prop_1 ) or whenever ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: On condition that ( prop_1 ) , then in response starting without any delay ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 or globally ( finally prop_2 ) )
gold: whenever ( prop_1 ) or repeatedly ( prop_2 )
pred ltl: finally ( prop_1 or globally ( finally prop_2 ) )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( negation prop_1 or prop_2 )
gold: never ( prop_1 ) or ( prop_2 )
pred ltl: globally ( negation prop_1 or prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 imply globally ( negation prop_2 ) )
gold: ( prop_1 ) means that never ( prop_2 )
pred ltl: ( prop_1 imply globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply finally [11,70] ( globally [44,75] prop_3 ) )
gold: It is always the case that when ( prop_1 ) and ( prop_2 ) then all of the following conditions hold : after a certain time instant during the next 11 to 70 time units ( prop_3 ) then this scenario will have to last without interruption for every time point within 44 to 75 time units .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally [11,70] ( globally [2,17] prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( negation ( globally [379,745] ( prop_1 or prop_3 ) ) or prop_2 )
gold: It is not the case that for each time instant within the coming 379 to 745 time units either ( prop_1 ) or ( prop_3 ) is detected , or else ( prop_2 ) .
pred ltl: ( negation ( finally [398,745] prop_1 or prop_3 ) or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: when possible ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( ( ( prop_1 and prop_2 ) equal prop_4 ) imply prop_3 )
gold: If it is equivalent to have ( prop_1 ) and ( prop_2 ) or to have ( prop_4 ) then ( prop_3 ) .
pred ltl: ( ( ( prop_1 and prop_2 ) or prop_4 ) imply prop_3 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: whenever ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply finally [23,38] prop_3 )
gold: The event ( prop_1 ) or ( prop_2 ) happening will cause ( prop_3 ) to occur within the next 23 to 38 time units.
pred ltl: globally ( ( prop_1 or prop_2 ) imply finally [23,38] prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( prop_1 or prop_2 )
gold: forever ( prop_1 ) or ( prop_2 )
pred ltl: globally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or globally ( negation prop_2 ) )
gold: at any time ( prop_1 ) or never ( prop_2 )
pred ltl: finally ( prop_1 or globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 or finally prop_2 )
gold: always ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until at any time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 until prop_2 )
gold: ( prop_1 ) until ( prop_2 )
pred ltl: ( prop_1 until prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 and globally ( negation prop_2 ) )
gold: ( prop_1 ) and never ( prop_2 )
pred ltl: ( prop_1 and globally ( negation prop_2 ) )

ltl: globally ( prop_1 and globally ( negation prop_2 ) )
gold: always ( prop_1 ) and never ( prop_2 )
pred ltl: globally ( prop_1 and globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: In the case of ( prop_1 ) or ( prop_2 ), then ( prop_3 ) will happen immediately.
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: whenever ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( prop_2 until prop_1 )
gold: The scenario that ( prop_2 ) will continue to be true until ( prop_1 ) happens .
pred ltl: ( prop_2 until prop_1 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: globally ( finally ( prop_1 ) and finally prop_2 )
gold: repeatedly ( prop_1 ) and when possible ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: On condition that the event that ( prop_1 ) gets observed then in response ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: when at some time ( prop_1 ) , ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: when ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: whenever ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )
gold: if at some time ( prop_1 ) , never ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )

ltl: globally ( ( prop_1 and prop_2 ) imply finally prop_3 )
gold: In case that ( prop_1 ) and ( prop_2 ) , then all of the following conditions hold : eventually the event that ( prop_3 ) is observed at a certain time point in the future before the end of the simulation .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally ( globally prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( ( ( prop_3 and prop_2 ) or prop_1 ) equal prop_4 )
gold: It is equivalent to have the scenario that ( prop_4 ) , while either of the following conditions holds : the scenario that ( prop_3 ) and the event that ( prop_2 ) , or the scenario that ( prop_1 ) .
pred ltl: ( ( ( prop_4 and prop_3 ) and prop_2 ) or prop_1 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: at some time ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: when whenever ( prop_1 ) , ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at any time ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: if ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 or prop_4 ) )
gold: As soon as the event that ( prop_1 ) is observed , or the transition action that ( prop_2 ) gets detected , then all of the following conditions are true : promptly ( prop_3 ) , or right away ( prop_4 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply ( prop_3 or prop_4 ) )

ltl: ( globally [86,251] ( prop_2 or prop_1 ) and prop_3 )
gold: For each time instant in the next 86 to 251 time units either ( prop_2 ) or ( prop_1 ) should be detected , and also ( prop_3 ) .
pred ltl: ( globally [86,251] ( prop_2 or prop_1 ) and prop_3 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( finally ( prop_1 ) until finally prop_2 )
gold: repeatedly ( prop_1 ) until whenever ( prop_2 )
pred ltl: globally ( finally ( prop_1 ) until finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: During the interval that ( prop_1 ) then all of the following conditions are true : at the same moment ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: if ( prop_1 ) , whenever ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and globally ( finally prop_2 ) )
gold: at some time ( prop_1 ) and repeatedly ( prop_2 )
pred ltl: finally ( prop_1 and globally ( finally prop_2 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or prop_2 )
gold: ( prop_1 ) or ( prop_2 )
pred ltl: ( prop_1 or prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at any time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until at some time ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: Everytime when ( prop_1 ) , and ( prop_2 ) , then all of the following conditions are true : at the same moment ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 until prop_2 )
gold: ( prop_1 ) until ( prop_2 )
pred ltl: ( prop_1 until prop_2 )

ltl: finally ( prop_1 and globally ( negation prop_2 ) )
gold: at some time ( prop_1 ) and never ( prop_2 )
pred ltl: finally ( prop_1 and globally ( negation prop_2 ) )

ltl: finally ( prop_1 until finally prop_2 )
gold: at any time ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at any time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( negation ( prop_1 ) imply finally prop_2 )
gold: don't ( prop_1 ) means that whenever ( prop_2 )
pred ltl: ( negation ( finally ( prop_1 ) ) imply finally prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at any time ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: negation ( prop_1 and prop_2 )
gold: don't ( prop_1 ) and ( prop_2 )
pred ltl: negation ( prop_1 and prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In case ( prop_1 ) and ( prop_2 ) happen, then ( prop_3 ) will happen in response.
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: ( prop_1 or globally ( negation prop_2 ) )
gold: ( prop_1 ) or never ( prop_2 )
pred ltl: ( prop_1 or globally ( negation prop_2 ) )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: ( ( negation prop_1 equal prop_2 ) until prop_3 )
gold: It is the case that ( prop_1 ) is not true if and only if ( prop_2 ) is true, and this condition will hold until eventually ( prop_3 ) is true .
pred ltl: ( negation ( prop_1 equal prop_2 ) until prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and when possible ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at any time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: if whenever ( prop_1 ) , when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or when possible ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply finally prop_3 )
gold: Globally , during the interval that ( prop_1 ) , and ( prop_2 ) , then all of the following conditions hold : finally the event that ( prop_3 ) has to be detected at a time in the future before the end of the simulation .
pred ltl: globally ( ( prop_1 and prop_2 ) imply finally prop_3 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: In the case the transition action that ( prop_1 ) occurs , and ( prop_2 ) , then the following condition is true : starting without any delay ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and when possible ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: ( prop_1 imply prop_2 )
gold: when ( prop_1 ) , ( prop_2 )
pred ltl: ( prop_1 imply prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply globally [4,47] prop_3 )
gold: It is always the case that everytime when ( prop_1 ) and ( prop_2 ) then all of the following conditions hold : for each time point during the subsequent 4 to 47 time units ( prop_3 ) .
pred ltl: globally ( ( prop_1 and prop_2 ) imply globally [4,47] prop_3 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or when possible ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or at some time ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: at some time ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: at some time ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and at any time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( negation ( prop_1 or prop_2 ) imply prop_3 )
gold: If it is not the case that ( prop_1 ) or ( prop_2 ), then ( prop_3 ) .
pred ltl: ( negation ( prop_1 or prop_2 ) imply prop_3 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( globally [145,584] ( prop_1 or prop_2 ) or prop_3 )
gold: For each time instant in the coming 145 to 584 time units either ( prop_1 ) or ( prop_2 ) should be detected , or else ( prop_3 ) .
pred ltl: ( globally [145,584] ( prop_1 or prop_2 ) or prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: whenever ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )
gold: During the interval that ( prop_1 ) , or ( prop_2 ) , then the following condition holds : ( prop_3 ) and then this condition must continue consecutively in the future till the simulation ends .
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )

ltl: globally ( negation ( prop_1 ) and globally ( negation prop_2 ) )
gold: never ( prop_1 ) and never ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and globally ( negation prop_2 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and at some time ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: ( prop_1 and prop_2 )
gold: ( prop_1 ) and ( prop_2 )
pred ltl: ( prop_1 and prop_2 )

ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )
gold: if at some time ( prop_1 ) , never ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply globally ( negation prop_2 ) )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: ( ( ( prop_2 or prop_3 ) or prop_4 ) and prop_1 )
gold: At least one of the following scenarios is detected : ( prop_2 ) , or ( prop_3 ) , or ( prop_4 ). And in the meantime, ( prop_1 ) happens .
pred ltl: ( ( prop_2 or prop_3 ) or prop_4 ) or prop_1 )

ltl: finally ( prop_1 and globally prop_2 )
gold: whenever ( prop_1 ) and always ( prop_2 )
pred ltl: finally ( prop_1 and globally prop_2 )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at any time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( finally prop_1 imply prop_2 )
gold: whenever ( prop_1 ) means that ( prop_2 )
pred ltl: ( finally prop_1 imply prop_2 )

ltl: finally ( prop_1 until prop_2 )
gold: at any time ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: when possible ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( globally [192,240] prop_3 or prop_1 ) equal prop_2 )
gold: ( prop_3 ) is detected at all time instant within the next 192 to 240 time units , or ( prop_1 ) will happen , the above scenario should be equivalent to ( prop_2 ) .
pred ltl: ( ( globally [infinity [0,192] prop_3 ) or prop_1 ) equal prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: whenever ( prop_1 ) and at some time ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( negation ( prop_1 ) until negation prop_2 )
gold: never ( prop_1 ) until do not ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) until negation prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: when possible ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( globally ( prop_1 and prop_3 ) imply prop_2 )
gold: For each time instant in the future if ( prop_1 ) and ( prop_3 ) , then ( prop_2 ) .
pred ltl: ( globally ( prop_1 and prop_3 ) imply prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that in case that the event that ( prop_1 ) happens or ( prop_2 ) then the following condition is true : at the same time point ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 until prop_2 )
gold: when possible ( prop_1 ) until ( prop_2 )
pred ltl: finally ( prop_1 until prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 and globally ( negation prop_2 ) )
gold: ( prop_1 ) and never ( prop_2 )
pred ltl: ( prop_1 and globally ( negation prop_2 ) )

ltl: ( globally ( prop_3 and prop_1 ) or prop_2 )
gold: For each time instant ( prop_3 ) and ( prop_1 ) , or else ( prop_2 ) .
pred ltl: ( globally ( prop_3 and prop_1 ) or prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If the transition action that ( prop_1 ) is observed , then the following condition is true : ( prop_2 ) , and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and when possible ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: whenever ( prop_1 ) until when possible ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )
gold: It is always the case that while ( prop_1 ) , or ( prop_2 ) then all of the following conditions hold : starting without any delay ( prop_3 ) .
pred ltl: globally ( ( prop_1 or prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or prop_2 )
gold: whenever ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )
gold: ( prop_n )

Every time the scenario ( prop_1 ) happens and ( prop_2 ), the following conditions will be true: ( prop_3 ) .. ( prop_n ).
pred ltl: globally ( ( prop_1 and prop_2 ) imply prop_3 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at some time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: at any time ( prop_1 ) means that when possible ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at some time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: It is always the case that whenever the scenario that ( prop_1 ) gets detected , then all of the following conditions are true : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until at some time ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: ( globally ( finally prop_1 ) imply prop_2 )
gold: repeatedly ( prop_1 ) can infer that ( prop_2 )
pred ltl: ( globally ( finally prop_1 ) imply prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at some time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: when possible ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: finally ( prop_1 or negation prop_2 )
gold: at any time ( prop_1 ) or do not ( prop_2 )
pred ltl: finally ( prop_1 or negation prop_2 )

ltl: ( prop_1 imply finally prop_2 )
gold: ( prop_1 ) can infer that at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: finally ( prop_1 until finally prop_2 )
gold: at some time ( prop_1 ) until whenever ( prop_2 )
pred ltl: finally ( prop_1 until finally prop_2 )

ltl: ( ( ( prop_3 and prop_2 ) or prop_4 ) equal prop_1 )
gold: If ( prop_3 ) and ( prop_2 ) or ( prop_4 ) then the scenario is equivalent to ( prop_1 ) .
pred ltl: ( ( ( prop_3 and prop_2 ) or prop_4 ) equal prop_1 )

ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )
gold: Globally , whenever ( prop_1 ) , then all of the following conditions are true : at the same time point ( prop_2 ) , or ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 or prop_3 ) )

ltl: ( prop_1 and finally prop_2 )
gold: ( prop_1 ) and whenever ( prop_2 )
pred ltl: ( prop_1 and finally prop_2 )

ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )
gold: In case that ( prop_1 ) or ( prop_2 ) , then all of the following conditions hold : ( prop_3 ) and consecutively this condition should last in the future .
pred ltl: globally ( ( prop_1 or prop_2 ) imply globally prop_3 )

ltl: ( prop_1 imply finally prop_2 )
gold: when ( prop_1 ) , at some time ( prop_2 )
pred ltl: ( prop_1 imply finally prop_2 )

ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )
gold: If the event that ( prop_1 ) gets detected then the following condition is true : ( prop_2 ) , and ( prop_3 ) .
pred ltl: globally ( prop_1 imply ( prop_2 and prop_3 ) )

ltl: finally ( prop_1 or finally prop_2 )
gold: when possible ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: globally ( negation ( prop_1 ) and finally prop_2 )
gold: never ( prop_1 ) and when possible ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) and finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: when possible ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 and prop_2 )
gold: whenever ( prop_1 ) and ( prop_2 )
pred ltl: finally ( prop_1 and prop_2 )

ltl: ( finally ( prop_1 ) imply finally prop_2 )
gold: whenever ( prop_1 ) can infer that whenever ( prop_2 )
pred ltl: ( finally ( prop_1 ) imply finally prop_2 )

ltl: globally ( prop_1 imply prop_2 )
gold: Globally , when the event that ( prop_1 ) happens , then the following condition is true : ( prop_2 ) .
pred ltl: globally ( prop_1 imply prop_2 )

ltl: finally ( prop_1 or prop_2 )
gold: at some time ( prop_1 ) or ( prop_2 )
pred ltl: finally ( prop_1 or prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: ( ( finally prop_2 imply prop_1 ) imply prop_3 )
gold: If finally that ( prop_2 ) is detected then ( prop_1 ) , then ( prop_3 ) .
pred ltl: ( ( finally ( prop_2 imply prop_1 ) imply prop_3 )

ltl: finally ( prop_1 and negation prop_2 )
gold: when possible ( prop_1 ) and do not ( prop_2 )
pred ltl: finally ( prop_1 and negation ( finally prop_2 ) )

ltl: globally ( negation ( prop_1 ) or finally prop_2 )
gold: never ( prop_1 ) or when possible ( prop_2 )
pred ltl: globally ( negation ( prop_1 ) or finally prop_2 )

ltl: finally ( prop_1 and finally prop_2 )
gold: at any time ( prop_1 ) and whenever ( prop_2 )
pred ltl: finally ( prop_1 and finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or at any time ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: finally ( prop_1 or finally prop_2 )
gold: at any time ( prop_1 ) or whenever ( prop_2 )
pred ltl: finally ( prop_1 or finally prop_2 )

ltl: ( finally [456,953] ( prop_1 imply prop_2 ) or prop_3 )
gold: It is required that at a certain point within the next 456 to 953 time units the scenario in which ( prop_1 ) happens and then ( prop_2 ) , or else ( prop_3 ) .
pred ltl: ( finally [456,953] ( prop_1 and prop_2 ) or prop_3 )

ltl: ( prop_1 until finally prop_2 )
gold: ( prop_1 ) until whenever ( prop_2 )
pred ltl: ( prop_1 until finally prop_2 )

ltl: globally ( ( prop_1 until prop_2 ) imply globally [22,84] prop_3 )
gold: Whenever ( prop_1 ) remains the same until eventually ( prop_2 ), ( prop_3 ) will happen during the coming 22 to 84 time units.
pred ltl: globally ( prop_1 until [22,84] prop_2 )

ltl: ( prop_1 or finally prop_2 )
gold: ( prop_1 ) or whenever ( prop_2 )
pred ltl: ( prop_1 or finally prop_2 )

ltl: globally ( finally prop_1 and prop_2 )
gold: repeatedly ( prop_1 ) and ( prop_2 )
pred ltl: globally ( finally prop_1 and prop_2 )

